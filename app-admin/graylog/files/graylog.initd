#!/sbin/runscript

JAVA_OPTS="${JAVA_OPTS:="$DEFAULT_JAVA_OPTS"}"

_removepid() {
        rm -f ${GRAYLOG_PID:-/run/graylog/graylog-server.pid} > /dev/null 2>&1
}

depend() {
        after logger
        use elasticsearch mongodb
}

start() {
 	checkpath --directory --owner root:root --mode 0775 /run/graylog
	checkpath --directory --owner root:root --mode 0775 /var/log/graylog	

        if [ ! -e ${GRAYLOG_CONF:-/etc/graylog/graylog-server.conf} ]; then
                eerror "${GRAYLOG_CONF:-/etc/graylog/graylog-server.conf} does not exist; cannot start Graylog"
                return 1
        fi

        ebegin "Starting ${SVCNAME}"
        # waiting for elasticsearch
        start-stop-daemon --start --background -w 30 -P \
                --stderr ${GRAYLOG_LOG:-/var/log/graylog/graylog-server.log} \
                --stdout ${GRAYLOG_LOG:-/var/log/graylog/graylog-server.log} \
                --pidfile ${GRAYLOG_PID:-/run/graylog/graylog-server.pid} \
                --exec java -- -jar ${JAVA_OPTS} /opt/graylog-server/graylog.jar \
      			server -f "${GRAYLOG_CONF:-/etc/graylog/graylog-server.conf}" -p "${GRAYLOG_PID:-/run/graylog/graylog-server.pid}" 


        # There's no way to know if anything went wrong, so the only
        # thing we can do is wait and see if it's running afterwards
        graylog_test
        eend ${?} || return 1
}

stop() {
        ebegin "Stopping ${SVCNAME}"
        start-stop-daemon --stop -w 30 -P \
                --pidfile ${GRAYLOG_PID:-/run/graylog/graylog-server.pid}
        
        eend ${?}

        _removepid # just in case
}

graylog_test() {
        # Graylog2 only deletes its PID file if it hits a config error
        if [ ! -e ${GRAYLOG_PID:-/run/graylog/graylog-server.pid} ]; then
				i=0
				while true; do  
					if [ -e ${GRAYLOG_PID:-/run/graylog/graylog-server.pid} ]; then
						break
					elif [ ${i} -eq 45 ]; then
	                	eerror "Configuration problem, check ${GRAYLOG_CONF:-/etc/graylog/graylog-server.conf} and ${GRAYLOG_LOG:-/var/log/graylog/graylog-server.log}"
    	            	return 1
					else
						echo -n .
						sleep 1
						i=$((${i}+1))
					fi
				done
        fi
        
        local PID=`cat ${GRAYLOG_PID:-/run/graylog/graylog-server.pid}`

        # Graylog2 isn't running, so that means there was a problem
        if [ ! -e /proc/${PID} ]; then
                eerror "Something went wrong, check ${GRAYLOG_LOG:-/var/log/graylog/graylog-server.log}"
                _removepid
                return 1
        fi

        return 0
}
